# -*- coding: utf-8 -*-
"""create_schemas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-ZzhNx7tdbXD5rAbRZWZSFjZROFQENa8
"""

import json
import requests
import pandas as pd
import datetime

# Reformat the date 
def formatDate(date):
  datemap = {
      'JAN': '1',
      'FEB': '2',
      'MAR': '3',
      'APR': '4',
      'MAY': '5',
      'JUN': '6',
      'JUL': '7',
      'AUG': '8',
      'SEP': '9',
      'OCT': '10',
      'NOV': '11',
      'DEC': '12',
  }

  d = date.split('-')
  ts = datemap[d[1]] + '-' + d[0] + '-' + d[2] + ' '

  return ts

if __name__ == '__main__':
    # Get data, convert to JSON
    data = requests.get("http://www.psudataeng.com:8000/getBreadCrumbData")
    json_data = pd.read_json(data.content)
    
    # Create a timestamp based on the format described in https://www.postgresql.org/docs/9.1/datatype-datetime.html
    json_data['ACT_TIME'] = json_data['ACT_TIME'].apply(lambda x: str(datetime.timedelta(seconds=x)))
    json_data['OPD_DATE'] = json_data['OPD_DATE'].apply(lambda x: formatDate(x))
    timestamp = json_data['OPD_DATE'] + json_data['ACT_TIME']

    # The first schema required for part B, "BreadCrumb"
    BreadCrumb = json_data[[
                                 'GPS_LATITUDE', 
                                 'GPS_LONGITUDE', 
                                 'DIRECTION', 
                                 'VELOCITY',
                                 'EVENT_NO_TRIP'
                                ]]
    BreadCrumb = pd.concat([timestamp, BreadCrumb], axis=1)
    BreadCrumb.columns = ['tstamp','latitude','longitude','direction','speed','trip_id']

    # The second schema required for part B, "Trip". Note that columns 1, 4, and 5 are incomplete,
    # as mentioned in the assignment description
    Trip = pd.concat([
                           pd.concat([json_data[['EVENT_NO_TRIP','EVENT_NO_STOP','VEHICLE_ID']], timestamp,], axis=1),
                           json_data['DIRECTION']
                          ], axis=1)
    Trip.columns = ['trip_id','route_id','vehicle_id','service_key','direction']

    BreadCrumb.to_json('Breadcrumb.json')
    Trip.to_json('Trip.json')

import datetime

delta = datetime.timedelta(seconds=31607)
print(delta)