# -*- coding: utf-8 -*-
"""create_schemas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-ZzhNx7tdbXD5rAbRZWZSFjZROFQENa8
"""

import json
import requests
import pandas as pd
import datetime

def isWeekday(day):
    return day not in ["Sunday", "Saturday"]

if __name__ == '__main__':
    # Get data, convert to JSON
    data = requests.get("http://www.psudataeng.com:8000/getBreadCrumbData")
    json_data = pd.read_json(data.content)
    
    json_data['ACT_TIME'] = pd.to_timedelta(pd.to_numeric(json_data['ACT_TIME']), unit='s')
    json_data['OPD_DATE'] = pd.to_datetime(json_data['OPD_DATE'])
    timestamp = json_data['OPD_DATE'] + json_data['ACT_TIME']
    weekday = timestamp.dt.day_name().apply(lambda x: "Weekday" if isWeekday(x) else x)

    # The first schema required for part B, "BreadCrumb"
    BreadCrumb = json_data[[
        'GPS_LATITUDE', 
        'GPS_LONGITUDE', 
        'DIRECTION', 
        'VELOCITY',
        'EVENT_NO_TRIP'
    ]]
    BreadCrumb = pd.concat([timestamp, BreadCrumb], axis=1)
    BreadCrumb.columns = ['tstamp','latitude','longitude','direction','speed','trip_id']

    # The second schema required for part B, "Trip". Note that columns 1, 4, and 5 are incomplete,
    # as mentioned in the assignment description
    Trip = pd.concat([
                           pd.concat([json_data[['EVENT_NO_TRIP','EVENT_NO_STOP','VEHICLE_ID']], timestamp,], axis=1),
                           json_data['DIRECTION']
                          ], axis=1)
    Trip.columns = ['trip_id','route_id','vehicle_id','service_key','direction']

    BreadCrumb.to_json('Breadcrumb.json')
    Trip.to_json('Trip.json')

import datetime

delta = datetime.timedelta(seconds=31607)
print(delta)